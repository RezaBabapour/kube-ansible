---
- name: Stop Controller Services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  ignore_errors: yes
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Copy Controller binary files to /usr/local/bin/
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin/
    mode: 0744
    remote_src: yes
  with_items:
    - /tmp/{{ kubernetes.version }}/kube-apiserver
    - /tmp/{{ kubernetes.version }}/kube-controller-manager
    - /tmp/{{ kubernetes.version }}/kube-scheduler
    - /tmp/{{ kubernetes.version }}/kubectl

- name: Create /var/lib/kubernetes/ directory
  file:
    path: /var/lib/kubernetes/
    state: directory
    recurse: true

- name: Copy certs to /var/lib/kubernetes/
  copy:
    src: "{{ item }}"
    dest: /var/lib/kubernetes/
    remote_src: yes
  with_items:
    - /tmp/ca.pem
    - /tmp/ca-key.pem
    - /tmp/kubernetes-key.pem
    - /tmp/kubernetes.pem
    - /tmp/service-account-key.pem
    - /tmp/service-account.pem
    - /tmp/encryption-config.yaml
    - /tmp/kube-controller-manager.kubeconfig
    - /tmp/kube-scheduler.kubeconfig
    - /tmp/admin.kubeconfig
    - /tmp/admin.pem
    - /tmp/admin-key.pem

- name: Create Kubernetes API Server systemd unit file
  template:
    src: kube-apiserver.service.j2 
    dest: /etc/systemd/system/kube-apiserver.service
    mode: 644

- name: Create Kubernetes Controller Manager systemd unit file
  template:
    src: kube-controller-manager.service.j2
    dest: /etc/systemd/system/kube-controller-manager.service
    mode: 644

- name: Create Kubernetes Scheduler systemd unit file
  template:
    src: kube-scheduler.service.j2
    dest: /etc/systemd/system/kube-scheduler.service
    mode: 644

- name: Restart Controller Services
  systemd:
    name: "{{ item }}"
    state: restarted
    daemon_reload: yes
    enabled: yes
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: Wait for 10 seconds to controller services start
  pause:
    seconds: 10
